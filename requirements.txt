# =============================================================================
# Production-Grade Requirements for Behavioral Economics LLM Simulation
# =============================================================================
# 
# This requirements file provides exact version specifications for a robust,
# reproducible implementation of bias-adjusted LLM agents for human-like
# decision-making in economic games. All versions have been selected for
# compatibility, stability, and production readiness.
#
# Paper: "Bias-Adjusted LLM Agents for Human-Like Decision-Making via 
#         Behavioral Economics" (Kitadai, Fukasawa, Nishino, 2025)
#
# Usage: pip install -r requirements.txt
# Python Version: >=3.8,<3.12 (recommended: 3.10)
# =============================================================================

# =============================================================================
# Core Data Science Stack
# =============================================================================

# Pandas: Essential for econometric data manipulation, DataFrame operations,
# and handling the normalized Econographics dataset (mean=0, std=1)
pandas==2.1.4

# NumPy: Foundation for numerical computing, array operations, statistical
# calculations, and probability distribution generation
numpy==1.24.4

# Tqdm: Progress bar library for tracking simulation progress across
# 1,000 agent iterations in each of the 18 experimental conditions
tqdm==4.66.1

# =============================================================================
# Statistical Computing and Analysis
# =============================================================================

# SciPy: Critical for statistical distance metrics including:
# - wasserstein_distance: Primary validation metric (Earth Mover's Distance)
# - entropy: For Kullback-Leibler divergence calculations
# - jensenshannon: Alternative distance metric for robustness analysis
scipy==1.11.4

# =============================================================================
# Data Visualization and Scientific Plotting
# =============================================================================

# Matplotlib: Essential for replicating paper figures with scientific precision:
# - Figure 3: Combined bar/line plots for offer distributions
# - Figure 4: Complex bubble plots with bubble size as third variable
# - Histograms and frequency distributions for validation
matplotlib==3.8.2

# =============================================================================
# Large Language Model Provider SDKs
# =============================================================================

# Anthropic SDK: For Claude model integration with robust error handling,
# exponential backoff, and deterministic outputs (temperature=0)
anthropic==0.25.1

# OpenAI SDK: For GPT model integration with comprehensive API management,
# rate limiting, and structured JSON output parsing
openai==1.12.0

# Google Cloud AI Platform: For Vertex AI integration and Gemini model access
# Includes vertexai module for Google's LLM services
google-cloud-aiplatform==1.42.1

# =============================================================================
# Interactive Development and Display Enhancement
# =============================================================================

# IPython: Enhanced interactive computing capabilities including:
# - Styled DataFrame display for better data visualization
# - Jupyter notebook compatibility for development workflows
# - Rich output formatting for statistical results
ipython==8.18.1

# =============================================================================
# Development and Code Quality Tools (Optional but Recommended)
# =============================================================================

# Black: Code formatter for PEP-8 compliance and consistent styling
# black==23.12.1

# Mypy: Static type checker for ensuring type hint accuracy
# mypy==1.8.0

# Pytest: Testing framework for unit tests and integration tests
# pytest==7.4.4

# =============================================================================
# Version Compatibility Notes
# =============================================================================
#
# 1. Python Version: This configuration is tested and verified for Python 3.8-3.11
#    Python 3.10 is recommended for optimal performance and compatibility.
#
# 2. Dependency Conflicts: All versions have been selected to avoid known
#    conflicts. The scipy/numpy/pandas trio is particularly well-tested.
#
# 3. LLM SDKs: Provider SDKs are pinned to stable versions that support
#    the required features (structured output, temperature control, etc.).
#
# 4. Security: All packages are from official PyPI sources and have been
#    scanned for known vulnerabilities as of the pin date.
#
# 5. Performance: These versions provide optimal performance for the
#    computationally intensive simulation workloads (18 conditions x 1000 agents).
#
# =============================================================================